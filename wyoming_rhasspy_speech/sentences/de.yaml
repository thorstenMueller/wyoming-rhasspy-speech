language: de
lists:
  color:
    values:
      - in: "wei(ß|ss)"
      - in: "schwarz"
      - in: "rot"
      - in: "orange"
      - in: "gelb"
      - in: "grün"
      - in: "blau"
      - in: "violett"
      - in: "braun"
  brightness:
    range:
      type: "percentage"
      from: 10
      to: 100
      step: 10
  seconds:
    range:
      from: 10
      to: 100
      step: 10
  minutes_small:
    range:
      from: 2
      to: 9
  minutes_large:
    range:
      from: 10
      to: 100
      step: 10
  minutes_extra:
    values:
      - in: fünfzehn
        out: 15
      - in: fünfundvierzig
        out: 45
  minutes_half:
    values:
      - in: halb
        out: 30
  hours_half:
    values:
      - in: halb
        out: 30
  hours:
    range:
      from: 1
      to: 100
  cover_classes:
    values:
      - in: "Markise[n]"
      - in: "(Jalousie[n]|Rollo[s]|Beschattung[en])"
      - in: "(Gardine[n]|Vorhang|Vorhänge)"
      - in: "Tür[e|en]"
      - in: "(Garagentür[e|en]|Garagentor[e])"
      - in: "Tor[e]"
      - in: "Schirm[e]"
      - in: "(Roll[l](a|ä)den|Rollo[s]|Beschattung[en])"
      - in: "Fenster"

expansion_rules:
  name: "[der|die|das|dem|den|des] {name}[s]"
  area: "[im|in der|in den|im] {area}"

intents:
  # nevermind
  HassNevermind:
    data:
      - sentences:
          - "vergiss es"
          - "egal"
          - "abbrechen"
          - "Abbruch"
          - "[doch ](nicht[s]|nix)"

  # date, time, weather
  HassGetCurrentTime:
    data:
      - sentences:
          - "wie spät ist es"

  HassGetCurrentDate:
    data:
      - sentences:
          - "welches Datum ist heute"

  HassGetWeather:
    data:
      - sentences:
          - "Wie ist das Wetter"
      - sentences:
          - "Wie ist das Wetter in <name>"
        requires_context:
          domain: weather

  # turn on/off
  # open/close
  # lock/unlock
  HassTurnOn:
    data:
      # turn on
      - sentences:
          - "Mach das Licht an"

      - sentences:
          - "Mach <name> an"
        requires_context:
          domain:
            - light
            - switch

      - sentences:
          - "Mach das Licht <area> an"

      # open
      - sentences:
          - "Öffne <name>"
        requires_context:
          domain:
            - cover
            - valve

      - sentences:
          - "Öffne <name> <area>"

      # lock
      - sentences:
          - "Schließe <name> ab"
        requires_context:
          domain: lock

      # script
      - sentences:
          - "Führe <name> aus"
        requires_context:
          domain: script

      # scene
      - sentences:
          - "Aktiviere <name>"
        requires_context:
          domain: scene

  HassTurnOff:
    data:
      # turn off
      - sentences:
          - "Mach das Licht aus"

      - sentences:
          - "Mach <name> aus"
        requires_context:
          domain:
            - light
            - switch

      - sentences:
          - "Mach das Licht <area> aus"

      # close
      - sentences:
          - "Schließe <name>"
        requires_context:
          domain:
            - cover
            - valve

      - sentences:
          - "Schließe <name> <area>"

      # unlock
      - sentences:
          - "Entsperre <name>"
        requires_context:
          domain: lock

  # light brightness/color
  HassLightSet:
    data:
      #     # brightness
      - sentences:
           - "Setze [die] Helligkeit von {name} auf {brightness} [Prozent]"
           - "Setze [die] {name} Helligkeit auf {brightness} [Prozent]"
        requires_context:
           domain: light

      - sentences:
           - "Setze [die] Helligkeit {area} auf {brightness} Prozent"
           - "Stelle [die] Helligkeit {area} auf {brightness}"

      - sentences:
           - "set [the] {floor} [floor] brightness to {brightness} percent"
  #         - "set [the] brightness of [the] {floor} [floor] to {brightness} percent"

  #     # color
  #     - sentences:
  #         - "set [the] [color of [the]] {name} to {color}"
  #         - "set [the] {name} [color] to {color}"
  #       requires_context:
  #         domain: light

  #     - sentences:
  #         - "set [the] [color of [the]] {area} lights to {color}"
  #         - "set [the] {area} lights to {color}"
  #         - "set [the] lights in [the] {area} to {color}"

  #     - sentences:
  #         - "set [the] [color of [the]] {floor} [floor] lights to {color}"
  #         - "set [the] {floor} [floor] lights to {color}"
  #         - "set [the] lights (on|in) [the] {floor} [floor] to {color}"

  # # timers
  # HassStartTimer:
  #   data:
  #     # seconds
  #     - sentences:
  #         - "(set|start|create) [a] timer for {seconds} seconds"

  #     # minutes
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 minute"
  #         - "(set|start|create) [a] timer for {minutes_small} minutes"
  #         - "(set|start|create) [a] timer for {minutes_large} minutes"
  #         - "(set|start|create) [a] timer for {minutes_extra} minutes"

  #     # minutes half
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 and a {minutes_half:seconds} minutes"
  #         - "(set|start|create) [a] timer for {minutes_small} and a {minutes_half:seconds} minutes"
  #         - "(set|start|create) [a] timer for {minutes_large} and a {minutes_half:seconds} minutes"
  #         - "(set|start|create) [a] timer for {minutes_extra} and a {minutes_half:seconds} minutes"

  #     # hours
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 hour"
  #         - "(set|start|create) [a] timer for {hours} hours"

  #     # hours half
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 and a {hours_half:minutes} hours"
  #         - "(set|start|create) [a] timer for {hours} and a {hours_half:hours} hours"

  #     # hours + minutes
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 hour and 1 minute"
  #         - "(set|start|create) [a] timer for {hours} hours and {minutes_small} minutes"
  #         - "(set|start|create) [a] timer for {hours} hours and {minutes_large} minutes"
  #         - "(set|start|create) [a] timer for {hours} hours and {minutes_extra} minutes"

  # HassCancelTimer:
  #   data:
  #     - sentences:
  #         - "<timer_cancel>[ (den|meinen)] Timer"

  # HassCancelAllTimers:
  #   data:
  #     - sentences:
  #         - "<timer_cancel> (alle[ meine]|sämtliche) Timer"

  # HassPauseTimer:
  #   data:
  #     - sentences:
  #         - "pausiere[ (den|meinen)] Timer"

  # HassUnpauseTimer:
  #   data:
  #     - sentences:
  #         - "setze[ (den|meinen)] Timer fort"

  # HassTimerStatus:
  #   data:
  #     - sentences:
  #         - "Timer Status"
  #         - "Status (des|meines) Timers"
  #         - "wie lange läuft (der|mein) Timer noch"

  # # media players
  # HassMediaPause:
  #   data:
  #     - sentences:
  #         - "(pausiere[n]|pause|anhalten|stopp|halt[e an])"

  #     - sentences:
  #         - "(pausiere|pause) <name>"
  #         - "halte <name> an"
  #         - "<name> (pausieren|pause|anhalten|stopp|halt)"
  #       requires_context:
  #         domain: media_player

  # HassMediaUnpause:
  #   data:
  #     - sentences:
  #         - "fortsetzen|weiter[ (<machen>|laufen lassen)]"

  #     - sentences:
  #         - "<name> weiter[ (<machen>|laufen lassen)]"
  #         - "<name> fortsetzen"
  #       requires_context:
  #         domain: media_player

  # HassMediaNext:
  #   data:
  #     - sentences:
  #         - "[<starte> ]<naechster>[ <song>]"

  #     - sentences:
  #         - "[<starte> ]<naechster>[ <song>][ (<an>|am)] <name>"
  #       requires_context:
  #         domain: media_player

  # # temperature
  # HassGetTemperature:
  #   data:
  #     - sentences:
  #         - "Wie[ (hoch|niedrig)] ist die Temperatur[ <area>]"
  #         - "Wie[ (hoch|niedrig)] ist <area> die Temperatur"
  #         - "Wie[ (hoch|niedrig)] ist die Temperatur <von_dem> Thermostat <area>"
  #         - "Wie[ (hoch|niedrig)] ist die Temperatur des Thermostat[s] <area>"
  #         - "Wie (warm|kalt) ist es <area>"
  #         - "<wieviel> Grad[ (hat|sind)] es <area>"

  #     - sentences:
  #         - "Wie[ (hoch|niedrig)] ist die Temperatur[ <von_dem>] <name>"
  #         - "Wie[ (hoch|niedrig)] ist die Temperatur des <name>[s]"
  #       requires_context:
  #         domain: climate

  # # questions
  # HassGetState:
  #   data:
  #     # doors, etc.
  #     - sentences:
  #         - "ist <name> {cover_states:state}"
  #       requires_context:
  #         domain:
  #           - cover
  #           - valve
  #       lists:
  #         state:
  #           values:
  #             - "(offen|auf|oben|geöffnet)"
  #             - "(geschlossen|zu|unten)"

  #     # locks
  #     - sentences:
  #         - "ist <name> {state}"
  #       requires_context:
  #         domain: lock
  #       lists:
  #         state:
  #           values:
  #             - "(([ab|zu]ge|ver)(schlossen|sperrt)|verriegelt)"
  #             - "(nicht (([ab|zu]ge|ver)(schlossen|sperrt)|verriegelt)|ent(riegelt|sperrt)|aufge(sperrt|schlossen))"

  # # todo
  # HassListAddItem:
  #   data:
  #     - sentences:
  #         - "füge {todo_item}[ zu] <meine_liste> hinzu"
  #         - "füge[ zu] <meine_liste> {todo_item} hinzu"
  #       expansion_rules:
  #         meine_liste: "[meine[r]|die|der] ({name}[ Liste]|[Liste] {name})"
  #       requires_context:
  #         domain: todo
